syntax = "proto3";

import "google/api/annotations.proto";
import "google/protobuf/wrappers.proto";

import "Protos/Common.proto";

option csharp_namespace = "MozartUI.Services.Grpc";

package mozartui.services;

service AuthService {
	// Log in a given user
	rpc Login(LoginRequest) returns (LoginResult) {
		option (google.api.http) = {
			post: "/api/auth/login"
			body: "*"
		};
	}
	// Log-out 
	rpc Logout (Empty) returns (Empty) {
		option (google.api.http) = {
			get: "/api/auth/logout"
		};
	}

	rpc Refresh (Empty) returns (LoginResult) {
		option (google.api.http) = {
			get: "/api/auth/refresh"
		};
	}

	// Registers a new user
	rpc RegisterUser(RegistrationRequest) returns (google.protobuf.StringValue) {
		option (google.api.http) = {
			post: "/api/auth/user"
			body: "*"
		};
	}

	// Gets a users name based on their user id
	rpc DeleteUser(google.protobuf.StringValue) returns (google.protobuf.BoolValue) {
		option (google.api.http) = {
			delete: "/api/auth/user"
			body: "*"
		};
	}

	// Requests a password reset
	rpc RequestPasswordReset(google.protobuf.StringValue) returns (google.protobuf.StringValue) {
		option (google.api.http) = {
			get: "/api/auth/password/{value}"
		};
	}
	// Resets a users password
	rpc ResetPassword(NewPasswordRequest) returns (google.protobuf.BoolValue) {
		option (google.api.http) = {
			put: "/api/auth/password"
			body: "*"
		};
	}
	// Verifies whether a user with a given email exists
	rpc UserExists(google.protobuf.StringValue) returns (google.protobuf.BoolValue) {
		option (google.api.http) = {
			get: "/api/auth/user/exists/{value}"
		};
	}

	//
	rpc UpdateUser(UserInfo) returns (google.protobuf.BoolValue) {
		option (google.api.http) = {
			put: "/api/auth/user"
			body: "*"
		};
	}
	//
    rpc GetUsers(Empty) returns (UserInfoArray) {
		option (google.api.http) = {
			get: "/api/auth/users"
		};
	}
    //userID
    rpc GetUser(google.protobuf.StringValue) returns (UserInfo) {
		option (google.api.http) = {
			get: "/api/auth/user/{value}"
		};
	}
}

message NewPasswordRequest {
  string userName = 1;
  string code = 2;
  string password = 3;
}

// Login request reply
message LoginResult {
  //
  string accessToken = 1;
  //
  string refreshToken = 2;
  //
  string userName = 3;
  // 
  string role = 4;
  //
  string email = 5;
  //
  string expiration = 6;
  // Login success status
  bool success = 7;
  // Email confirmed
  bool confirmed = 8;
}

// User registration request
message RegistrationRequest {
  // User name
  string userName = 1;
  // User password
  string password = 2;
  // 
  string role = 3;
  // 
  string email = 4;
}

// User login request
message LoginRequest {
  // User name
  string userName = 1;
  // User password
  string password = 2;
}

message UserInfo {
  // User name
  string userName = 1;
  // 
  string role = 3;
  // 
  string email = 4;
}

message UserInfoArray {
   repeated	UserInfo users = 1;
}
